<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:int-event="http://www.springframework.org/schema/integration/event"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd


            http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd


            http://www.springframework.org/schema/jdbc
			http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
			http://www.springframework.org/schema/integration/event
			http://www.springframework.org/schema/integration/event/spring-integration-event.xsd">

    <!--<task:scheduler id="taskScheduler" pool-size="20"/>-->

    <int:publish-subscribe-channel id="startupChannel"/>
    <int:control-bus input-channel="controlBusChannel"/>

    <bean id="myServiceActivator" class="com.giuliopulina.MyServiceActivatorImpl"/>
    <bean id="otherServiceActivatorService" class="com.giuliopulina.OtherServiceActivator"/>

    <int-event:inbound-channel-adapter channel="startupChannel"
                                       event-types="org.springframework.context.event.ContextRefreshedEvent"/>

    <int:transformer input-channel="startupChannel" expression="'@myAdapter.start()'"
                     output-channel="controlBusChannel"/>

    <task:executor id="pollerPool" pool-size="5-20" queue-capacity="0" rejection-policy="CALLER_RUNS" keep-alive="5"/>


    <int:poller id="myPoller" receive-timeout="3000" time-unit="MILLISECONDS" fixed-rate="1000"
                error-channel="myErrorChannel" task-executor="pollerPool">
        <int:advice-chain>
            <ref bean="txAdvice"/>
        </int:advice-chain>
    </int:poller>

    <!-- external bean definition -->
    <bean id="customerEventJdbcSource" class="com.giuliopulina.JdbcPoller">
        <constructor-arg ref="dataSource"/>
        <constructor-arg value="select pk from events where status = 0 for update"/>
        <property name="updateSql" value="update events set status = 1 where pk in (:pk)"/>
        <property name="maxRowsPerPoll" value="50"/>
    </bean>

    <int:inbound-channel-adapter send-timeout="3000" auto-startup="false" id="myAdapter" ref="customerEventJdbcSource"
                                 channel="myProcessChannel">
        <int:poller ref="myPoller"/>
    </int:inbound-channel-adapter>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:~/test"/>
        <property name="username" value="sa"/>
        <property name="password" value="sa"/>
    </bean>

    <jdbc:embedded-database id="embedded" type="H2"/>

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:dbscripts/createDB.sql"/>
    </jdbc:initialize-database>

    <int:channel id="myProcessChannel"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <int:service-activator ref="myServiceActivator" input-channel="myProcessChannel"/>

    <int:object-to-string-transformer input-channel="processErrorChannel" output-channel="loggingChannel"/>

    <int:channel id="myErrorChannel"/>

    <int:channel id="loggingChannel"/>

    <int:logging-channel-adapter channel="loggingChannel" log-full-message="true"/>


</beans>